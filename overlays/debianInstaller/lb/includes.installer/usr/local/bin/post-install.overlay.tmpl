#!/bin/sh

export CHROOT=/target
mkdir -p $CHROOT/var/log/install
exec > $CHROOT/var/log/install/debian-install-post-install.log 2>&1
export DEFAULT_USER=$(echo $(ls $CHROOT/home) | sed 's|\s.*$||g')
[ -f /root/install/.envs ] && export $(cat /root/install/.envs | grep -v '#') || true
ls /var/log/install
echo cp /var/log/install/di-early-install.log $CHROOT/var/log/install/di-early-install.log
cp /var/log/install/di-early-install.log $CHROOT/var/log/install/di-early-install.log
chmod +x /usr/local/bin/prompt

export DEBIAN_FRONTEND=dialog
export TERM=linux
export NCURSES_NO_UTF8_ACS=1
printf "\ec"
for mount in dev proc run sys; do
    mount --bind /${mount} $CHROOT/${mount}
done

debconf_prompt() {
    db_input critical $1 || true
    db_go
    db_get $1
    echo $RET | tee -a /var/log/install/debconf-prompt.log
}

mkdir -p $CHROOT/root/install
mkdir -p $CHROOT/usr/local/bin
cp /root/install/prompt.templates $CHROOT/root/install/prompt.templates
cp /usr/local/bin/prompt $CHROOT/usr/local/bin/prompt
cp /usr/local/bin/response $CHROOT/usr/local/bin/response
chmod +x $CHROOT/usr/local/bin/prompt
chmod +x $CHROOT/usr/local/bin/response

in-target sh -c "cd /tmp; prompt /root/install/prompt.templates; response /root/install/prompt.templates | tee .ret"
RESPONSE="$(cat $CHROOT/tmp/.ret)"
rm $CHROOT/tmp/.ret
in-target cat "$RESPONSE" > /home/$DEFAULT_USER/.ret

if [ -d /root/install/filesystem ]; then
    /usr/bin/rsync -a /root/install/filesystem/ $CHROOT/
fi
if [ -d /root/packages ]; then
    mkdir -p $CHROOT/root/packages/
    /usr/bin/rsync -a /root/packages/ $CHROOT/root/packages/
fi

if [ -f /root/install/repos.list ]; then
    for r in $(cat /root/install/repos.list); do
        if [ -f /etc/apt/sources.list.d/$r.list ]; then
            cp /etc/apt/sources.list.d/$r.list $CHROOT/etc/apt/sources.list.d/$r.list
        fi
        if [ -f /etc/apt/trusted.gpg.d/$r.key.chroot.asc ]; then
            cp /etc/apt/trusted.gpg.d/$r.key.chroot.asc $CHROOT/etc/apt/trusted.gpg.d/$r.chroot.asc
        fi
    fi
fi

# in-target apt-get update -y

# in-target sh -c "dpkg -i "/root/packages/*.deb || true; apt-get install -f; dpkg -i "/root/packages/*.deb"

# if [ -d $CHROOT/root/install/fonts ]; then
#     cd $CHROOT/root/install/fonts
#     for f in $(cat *.list); do
#         curl -LO $f
#         # TODO: support tar and tar.gz
#         unzip *.zip || true
#         # TODO: support otf fonts
#         cp *.ttf $CHROOT/usr/local/share/fonts 2>/dev/null || true
#     done
#     cd -
# fi

# in-target fc-cache -f -v

# if [ -f $CHROOT/root/install/hooks/post-install.sh ]; then
#     in-target sh -c "cd / && sh /root/install/hooks/post-install.sh 2>&1 > /var/log/install/post-install.log"
# fi
# if [ -f $CHROOT/root/install/hooks/user-post-install.sh ]; then
#     in-target touch /var/log/install/user-post-install.log
#     in-target chown $DEFAULT_USER:$DEFAULT_USER /var/log/install/user-post-install.log
#     in-target su $DEFAULT_USER -c "cd /home/$DEFAULT_USER && sh /root/install/hooks/user-post-install.sh 2>&1 > /var/log/install/user-post-install.log"
# fi

# if [ "<% $DEBUG %>" = "false" ]; then
#     rm -rf $CHROOT/var/log/install
#     rm -rf \
#         /root/install \
#         $CHROOT/root/install \
#         $CHROOT/root/packages
# fi

# in-target update-grub

for mount in dev proc run sys; do
    umount /target/${mount}
done
exit 0
