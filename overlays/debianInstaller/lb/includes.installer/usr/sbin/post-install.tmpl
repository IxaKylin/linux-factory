#!/bin/sh

. /usr/share/debconf/confmodule

export CHROOT=/target
mkdir -p $CHROOT/var/log/install
exec > $CHROOT/var/log/install/debian-install-post-install.log 2>&1
export DEFAULT_USER=$(echo $(ls $CHROOT/home) | sed 's|\s.*$||g')
[ -f /root/install/.envs ] && export $(cat /root/install/.envs | grep -v '#') || true


#### BEGIN
if ! chvt 3 &>/dev/null; then
  break
fi
export TERM=linux
export NCURSES_NO_UTF8_ACS=1
printf "\ec"
####
for mount in dev proc run sys; do
    mount --bind /${mount} /target/${mount}
done
####



### START

cat > /tmp/MyInstall.template <<EOF
Template: debian-installer/my-install/title
Type: text
# Main menu item
# :sl1:
Description: Installation of the core Operating System components has now completed.
 Additional software, and supporting applications, will now be installed.

Template: my-install/progress/title
Type: text
# :sl1:
Description: Installing Additional Components...

Template: my-install/asktheuser
Type: string
Description: Just type anything here.
EOF

debconf-loadtemplate snare-install /tmp/MyInstall.template

sleep 10

STEPS=10
db_progress START 0 $STEPS my-install/progress/title

# Do something or other
db_progress STEP 1

db_progress INFO snare-install/progress/title
# Do something or other
db_progress STEP 1

# db_input critical my-install/asktheuser || true
# db_go

# db_get my-install/asktheuser
# USERRESPONSE=$RET

# echo $USERRESPONSE > $CHROOT/var/log/TheUsersResponse
# chroot $CHROOT sh -c "cat /var/log/TheUsersResponse > /var/log/SomethingElse"

### END


if [ -d /root/install/filesystem ]; then
    /usr/bin/rsync -a /root/install/filesystem/ $CHROOT/
fi
if [ -d /root/packages ]; then
    mkdir -p $CHROOT/root/packages/
    /usr/bin/rsync -a /root/packages/ $CHROOT/root/packages/
fi

if [ -f /root/install/repos.list ]; then
    for r in $(cat /root/install/repos.list); do
        if [ -f /etc/apt/sources.list.d/$r.list ]; then
            cp /etc/apt/sources.list.d/$r.list $CHROOT/etc/apt/sources.list.d/$r.list
        fi
        if [ -f /etc/apt/trusted.gpg.d/$r.key.chroot.asc ]; then
            cp /etc/apt/trusted.gpg.d/$r.key.chroot.asc $CHROOT/etc/apt/trusted.gpg.d/$r.chroot.asc
        fi
    fi
fi

chroot $CHROOT sh -c \
    'apt-get update -y'

chroot $CHROOT sh -c \
    'dpkg -i "/root/packages/*.deb"'

# if [ -d $CHROOT/root/install/fonts ]; then
#     cd $CHROOT/root/install/fonts
#     for f in $(cat *.list); do
#         curl -LO $f
#         # TODO: support tar and tar.gz
#         unzip *.zip || true
#         # TODO: support otf fonts
#         cp *.ttf $CHROOT/usr/local/share/fonts 2>/dev/null || true
#     done
#     cd -
# fi

chroot $CHROOT sh -c \
    'fc-cache -f -v'

if [ -f $CHROOT/root/install/hooks/post-install.sh ]; then
    chroot $CHROOT su -c \
        "cd / && sh /root/install/hooks/post-install.sh 2>&1 > /var/log/install/post-install.log"
fi
if [ -f $CHROOT/root/install/hooks/user-post-install.sh ]; then
    chroot $CHROOT su -c \
        "touch /var/log/install/user-post-install.log"
    chroot $CHROOT su -c \
        "chown $DEFAULT_USER:$DEFAULT_USER /var/log/install/user-post-install.log"
    chroot $CHROOT su $DEFAULT_USER -c \
        "cd /home/$DEFAULT_USER && sh /root/install/hooks/user-post-install.sh 2>&1 > /var/log/install/user-post-install.log"
fi

if [ "<% $DEBUG %>" = "false" ]; then
    rm -rf $CHROOT/var/log/install
    rm -rf \
        /root/install \
        $CHROOT/root/install \
        $CHROOT/root/packages
fi

chroot $CHROOT su -c \
    "update-grub"

#### END
for mount in dev proc run sys; do
    umount /target/${mount}
done
####
if ! chvt 1 &>/dev/null; then
    break
fi
####

exit 0
