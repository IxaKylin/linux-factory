#!/bin/sh

# PREPARE ENVIRONMENT
export CHROOT=/target
mkdir -p $CHROOT/var/log/install
exec 2>> $CHROOT/var/log/install/di-late-command.log
cp /var/log/install/di-early-command.log $CHROOT/var/log/install/di-early-command.log
export DEFAULT_USER=$(echo $(ls $CHROOT/home) | sed 's|\s.*$||g')
[ -f /root/install/.envs ] && export $(cat /root/install/.envs | grep -v '#') || true
for mount in dev proc run sys; do
    mount --bind /${mount} $CHROOT/${mount}
done
if (echo $PATH | grep -vq '/usr/local/bin'); then
    export PATH="/usr/local/bin:$PATH"
fi

# PREPARE SCRIPTS
cp -r /root/install $CHROOT/root/install
cp /usr/local/bin/prompt $CHROOT/usr/local/bin/prompt
cp /usr/local/bin/response $CHROOT/usr/local/bin/response

# CUSTOM PROMPTS
{% if deb.config.prompts|length > 0 %}
export TERM=linux
export NCURSES_NO_UTF8_ACS=1
printf "\ec"
in-target sh -c "cd /tmp; /usr/local/bin/prompt /root/install/prompt.templates; /usr/local/bin/response /root/install/prompt.templates | tee .ret" >&2
export PROMPT_RESPONSE="$(cat $CHROOT/tmp/.ret)"
rm $CHROOT/tmp/.ret
in-target echo "$PROMPT_RESPONSE" > $CHROOT/home/$DEFAULT_USER/.ret
{% endif %}

# INSTALL FILESYSTEM
if [ -d $CHROOT/root/install/filesystem ]; then
    mkdir -p "$CHROOT/root/install/filesystem"
    in-target rsync -a /root/install/filesystem/ / >&2
fi
mkdir -p "$CHROOT/home/$DEFAULT_USER"
in-target rsync -a /etc/skel/ /home/$DEFAULT_USER/ >&2
in-target chown -R $DEFAULT_USER:$DEFAULT_USER "/home/$DEFAULT_USER" >&2
chmod +x $CHROOT/usr/local/bin/* >&2

# INSTALL DEBIAN REPOSITORIES
if [ -f /root/install/repos.list ]; then
    for r in $(cat /root/install/repos.list); do
        if [ -f /etc/apt/sources.list.d/$r.list ]; then
            cp /etc/apt/sources.list.d/$r.list $CHROOT/etc/apt/sources.list.d/$r.list
        fi
        if [ -f /etc/apt/trusted.gpg.d/$r.key.chroot.asc ]; then
            cp /etc/apt/trusted.gpg.d/$r.key.chroot.asc $CHROOT/etc/apt/trusted.gpg.d/$r.chroot.asc
        fi
    done
fi
in-target apt-get update -y

# INSTALL DEBS
if [ -d $CHROOT/root/install/debs ]; then
    in-target sh -c "dpkg -i /root/install/debs/*.deb || true; apt-get install -y -f; dpkg -i /root/install/debs/*.deb" >&2
fi

# RUN POST INSTALL HOOKS
for script in "/root/install/hooks/post-install"/*.sh; do
    if [ -f "$script" ]; then
        SCRIPT_NAME=$(basename "$script" .sh)
        echo running /var/log/install/post-install-$SCRIPT_NAME.log 1>&2
        in-target sh -c "cd / && sh $script 2>&1 > /var/log/install/post-install-$SCRIPT_NAME.log"
    fi
done
mkdir -p $CHROOT/home/$DEFAULT_USER/install/hooks
cp -r /root/install/hooks/user-post-install $CHROOT/home/$DEFAULT_USER/install/hooks
in-target chown -R $DEFAULT_USER:$DEFAULT_USER /home/$DEFAULT_USER
for s in "$CHROOT/home/$DEFAULT_USER/install/hooks/user-post-install"/*.sh; do
    SCRIPT_PATH=/home/$DEFAULT_USER/install/hooks/user-post-install/$(basename "$s")
    SCRIPT_NAME=$(basename "$s" .sh)
    if [ -f "${CHROOT}${SCRIPT_PATH}" ]; then
        LOG_PATH="/var/log/install/user-post-install-$SCRIPT_NAME.log"
        in-target touch $LOG_PATH
        in-target chown $DEFAULT_USER:$DEFAULT_USER $LOG_PATH
        echo running $SCRIPT_PATH 1>&2
        in-target su $DEFAULT_USER -c "cd /home/$DEFAULT_USER && sh $SCRIPT_PATH 2>&1 > $LOG_PATH"
    fi
done

# UPDATE SYSTEM
in-target fc-cache -f -v >&2
in-target update-grub >&2

# CLEANUP
if [ "{{ deb.debug }}" = "false" ]; then
    rm -rf \
        $CHROOT/home/$DEFAULT_USER/install \
        $CHROOT/root/install \
        $CHROOT/usr/local/bin/prompt \
        $CHROOT/usr/local/bin/response \
        $CHROOT/var/log/install
fi

for mount in dev proc run sys; do
    umount /target/${mount}
done
