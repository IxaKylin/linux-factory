#!/bin/sh

mkdir -p /log/calamares

CHROOT=$(mount | grep proc | grep calamares | awk '{print $3}' | sed -e "s#/proc##g")
DEFAULT_USER=$(echo $(ls $CHROOT/home) | sed 's|\s.*$||g')

# disable sudo password
rm -rf $CHROOT/etc/sudoers.d/10-installer

# setup flatpak
chroot $CHROOT sh -c \
    'flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo'

# install rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > $CHROOT/tmp/rust.sh
chroot $CHROOT su $DEFAULT_USER -c \
    'sh /tmp/rust.sh -y'
chroot $CHROOT rm -f $CHROOT/tmp/rust.sh

# install gvm
chroot $CHROOT su $DEFAULT_USER -c \
    'bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)'

# install nvm
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash'

# install pyenv
chroot $CHROOT su $DEFAULT_USER -c \
    'git clone https://github.com/pyenv/pyenv.git ~/.pyenv'

# install rvm
chroot $CHROOT sh -c \
    'gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB'
chroot $CHROOT sh -c \
    'curl -sSL https://get.rvm.io | bash -s stable --rails'

#? install nix
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -L https://nixos.org/nix/install | sh'

# install deno
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -L https://deno.land/x/install/install.sh | sh'

# install linux brew
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -L https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh | bash'

# install awsp
chroot $CHROOT sh -c \
    'npm install --unsafe-perm -g awsp'

# install unix permissions
chroot $CHROOT sh -c \
    'npm install --unsafe-perm -g unix-permissions'

# install dotstow
chroot $CHROOT sh -c \
    'npm install --unsafe-perm -g dotstow'

# install oh-my-zsh
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -L https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh'
cp $CHROOT/etc/skel/.zshrc $CHROOT/home/$DEFAULT_USER/.zshrc

# install spaceship prompt
chroot $CHROOT su $DEFAULT_USER -c \
    'git clone https://github.com/spaceship-prompt/spaceship-prompt.git ~/.oh-my-zsh/custom/themes/spaceship-prompt --depth=1'
chroot $CHROOT su $DEFAULT_USER -c \
    'ln -s ~/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh-theme ~/.oh-my-zsh/custom/themes/spaceship.zsh-theme'

# install zsh-autosuggestions
chroot $CHROOT su $DEFAULT_USER -c \
    'git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions'

# install zsh-syntax-highlighting
chroot $CHROOT su $DEFAULT_USER -c \
    'git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting'

#? install android studio
chroot $CHROOT sh -c \
    'flatpak install -y https://dl.flathub.org/repo/appstream/com.google.AndroidStudio.flatpakref'

#? install skype
chroot $CHROOT sh -c \
    'flatpak install -y https://dl.flathub.org/repo/appstream/com.skype.Client.flatpakref'

# install microsoft teams
chroot $CHROOT sh -c \
    'flatpak install -y https://dl.flathub.org/repo/appstream/com.github.IsmaelMartinez.teams_for_linux.flatpakref'

# install blender
chroot $CHROOT sh -c \
    'flatpak install -y https://dl.flathub.org/repo/appstream/org.blender.Blender.flatpakref'

# install mongo compass
curl -L -o $CHROOT/tmp/package.deb \
    https://downloads.mongodb.com/compass/mongodb-compass_1.26.1_amd64.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

# install etcher
curl -L -o $CHROOT/tmp/package.deb \
    https://github.com/balena-io/etcher/releases/download/v1.5.120/balena-etcher-electron_1.5.120_amd64.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

# install drawio
curl -L -o $CHROOT/tmp/package.deb \
    https://github.com/jgraph/drawio-desktop/releases/download/v14.6.13/drawio-amd64-14.6.13.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

#? install apache directory studio
curl -L -o $CHROOT/tmp/package.tar.gz \
    https://downloads.apache.org/directory/studio/2.0.0.v20210213-M16/ApacheDirectoryStudio-2.0.0.v20210213-M16-linux.gtk.x86_64.tar.gz
chroot $CHROOT sh -c \
    'cd /tmp && tar -xzvf package.tar.gz && mv ApacheDirectoryStudio /opt/ApacheDirectoryStudio'
rm -rf $CHROOT/tmp/package.tar.gz

# install dbeaver
curl -L -o $CHROOT/tmp/package.deb \
    https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

# install react native debugger
curl -L -o $CHROOT/tmp/package.deb \
    https://github.com/jhen0409/react-native-debugger/releases/download/v0.11.9/react-native-debugger_0.11.9_amd64.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

# install ly
curl -L -o $CHROOT/tmp/package.deb \
    https://github.com/clayrisser/nfpm-ly/releases/download/v0.1.0/ly_0.1.0_amd64.deb
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb 2>&1 || true'
chroot $CHROOT sh -c \
    'apt install -y -f'
chroot $CHROOT sh -c \
    'dpkg -i /tmp/package.deb'
rm -rf $CHROOT/tmp/package.deb

#? install krew
chroot $CHROOT su $DEFAULT_USER -c \
    'mkdir -p /tmp/krew'
chroot $CHROOT su $DEFAULT_USER -c \
    'curl -L -o /tmp/krew/krew.tar.gz https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz'
chroot $CHROOT su $DEFAULT_USER -c \
    'cd /tmp/krew && tar -xzvf krew.tar.gz'
chroot $CHROOT su $DEFAULT_USER -c \
    '/tmp/krew/krew-linux_amd64 install krew'
rm -rf $CHROOT/tmp/krew

# install docker machine
curl -L -o $CHROOT/tmp/docker-machine \
    https://github.com/docker/machine/releases/download/v0.16.0/docker-machine-Linux-x86_64
chroot $CHROOT sh -c \
    'mv /tmp/docker-machine /usr/local/bin/docker-machine'
chroot $CHROOT sh -c \
    'chmod +x /usr/local/bin/docker-machine'

# install minikube
curl -L -o $CHROOT/tmp/minikube \
    https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
chroot $CHROOT sh -c \
    'install /tmp/minikube /usr/local/bin/minikube'

# install another redis desktop manager
curl -L -o $CHROOT/usr/local/bin/ardm \
    'https://github.com/qishibo/AnotherRedisDesktopManager/releases/download/v1.4.5/Another-Redis-Desktop-Manager.1.4.5.AppImage'
chroot $CHROOT sh -c \
    'chmod +x /usr/local/bin/ardm'

#? install bumblebee status
chroot $CHROOT sh -c \
    'pip3 install --user bumblebee-status'

# install lolcat
chroot $CHROOT sh -c \
    'pip3 install lolcat'

# install winehq
chroot $CHROOT sh -c \
    'dpkg --add-architecture i386'
chroot $CHROOT sh -c \
    'apt update'
chroot $CHROOT sh -c \
    'apt install -y --install-recommends winehq-stable'

#? install vscode extensions
for e in $(cat <<EOF
CoenraadS.bracket-pair-colorizer
EditorConfig.EditorConfig
GraphQL.vscode-graphql
Prisma.prisma
VSpaceCode.vspacecode
VSpaceCode.whichkey
bodil.file-browser
dbaeumer.vscode-eslint
eamodio.gitlens
esbenp.prettier-vscode
golang.go
hashicorp.terraform
hediet.vscode-drawio
jacobdufault.fuzzy-search
kahole.magit
ms-azuretools.vscode-docker
ms-dotnettools.csharp
ms-kubernetes-tools.vscode-kubernetes-tools
ms-python.python
ms-python.vscode-pylance
ms-toolsai.jupyter
ms-vscode.azure-account
ms-vscode.cpptools
ms-vscode.hexeditor
ms-vscode.vscode-typescript-next
njpwerner.autodocstring
nopeslide.vscode-drawio-plugin-mermaid
redhat.vscode-yaml
stevencl.addDocComments
streetsidesoftware.code-spell-checker
usernamehw.errorlens
vscodevim.vim
zbr.vscode-ansible
EOF
); do
    chroot $CHROOT su $DEFAULT_USER -c \
        'code --install-extension $e'
done

# setup ly
mkdir -p $CHROOT/etc/ly
cat <<EOF > $CHROOT/etc/ly/save
$DEFAULT_USER
2
EOF

rm -rf \
    $CHROOT/etc/apt/source.list.d/vscode.list \
    $CHROOT/etc/sudoers.d/09-override \
    $CHROOT/usr/sbin/post-install \
    $CHROOT/usr/sbin/pre-install

exit 0
